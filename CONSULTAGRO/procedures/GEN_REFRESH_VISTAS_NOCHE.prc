CREATE OR REPLACE PROCEDURE GEN_REFRESH_VISTAS_NOCHE IS

  V_MENSAJE    VARCHAR2(30000);
  V_CORREO     VARCHAR2(30000);
  V_CC         VARCHAR2(5000) := 'PROGRAMACION2@HILAGRO.COM.PY;INFORMATICA@HILAGRO.COM.PY;PROGRAMACION11@HILAGRO.COM.PY;PROGRAMACION10@HILAGRO.COM.PY';
  V_RECIPIENTS VARCHAR2(5000) := 'PROGRAMACION4@HILAGRO.COM.PY';

  PROCEDURE PP_ERROR(I_MENSAJE IN VARCHAR2) AS
    FUNCTION FP_DET(I_TXT IN VARCHAR2) RETURN VARCHAR2 AS
    BEGIN
      RETURN '<tr>
    <td>' || I_TXT || '</td>
  </tr>';
    END FP_DET;
  BEGIN
    V_MENSAJE := SUBSTR(V_MENSAJE || FP_DET(I_MENSAJE || SQLERRM), 0, 30000);
  END PP_ERROR;
 
BEGIN

--  ESPERAR;


  BEGIN
    PP_GUARDAR_ESTADO_MES_CLI;
    pp_asignar_cb_doc_cliente;--esto guarda el canal y cta contable el documento para historico
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('pp_guardar_estado_mes_cli');
  END;



  BEGIN
    DBMS_MVIEW.REFRESH('FACC011_FACTURACION_VM');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('FACC011_FACTURACION_VM');
  END;

 -- ESPERAR ;
  BEGIN
    --APERALTA 20/02/2021
    TBL_EXPOSICION_DIF_CAM_HIST;
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('tbl_exposicion_dif_cam_hist');
  END;

 -- ESPERAR;


  BEGIN
    --APERALTA 20/02/2021
    --ESTO SOLO SE ACTUALIZA CUANDO SE CIERRA EL PERIODO
    tbl_refresh_vistas(i_tipo_ejecucion => 'A');

  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('TBL_REFRESH_VISTAS');

  end;

  --ESPERAR;
 
 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_LONDON_EXIST_DIARIA_ART');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_LONDON_EXIST_DIARIA_ART');
  END;

 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_CUBO_UNION_EXTRAC_CLI_PROV');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CUBO_UNION_EXTRAC_CLI_PROV');
  END;

 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_union_extrac_cli_prov_v_2');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_union_extrac_cli_prov_v_2');
  END;

 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_CUBO_UNION_OPERAC_CUENTAS');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CUBO_UNION_OPERAC_CUENTAS');
  END;

 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_CUBOB_VENTAS_RES_MENS_V');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CUBOB_VENTAS_RES_MENS_V');
  END;



  BEGIN
    DBMS_MVIEW.REFRESH('VM_CAST_CLI_ULT_VTA');
  EXCEPTION
    WHEN OTHERS THEN
    PP_ERROR('VM_CAST_CLI_ULT_VTA');
  END;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_CAST_HOLDING_CANT_FACT_PEND');
  EXCEPTION
    WHEN OTHERS THEN
    PP_ERROR('VM_CAST_HOLDING_CANT_FACT_PEND');
  END;

 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_CLI_VENTA_DISMINUCION');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CLI_VENTA_DISMINUCION');
  END;

  /* BEGIN
    DBMS_MVIEW.REFRESH('VM_CUBO_CONC_EMPL_CANAL');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CUBO_CONC_EMPL_CANAL');
  END;*/

  /*BEGIN
    DBMS_MVIEW.REFRESH('VM_CUBO_FAC_VENTAS_RES_MENS');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CUBO_FAC_VENTAS_RES_MENS');
  END;*/

  /*BEGIN
    DBMS_MVIEW.REFRESH('VM_FAC_LONDON_CNTRL_PRESUP_COM');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_FAC_LONDON_CNTRL_PRESUP_COM');
  END;*/

  /*BEGIN
    DBMS_MVIEW.REFRESH('VM_PER_EMPL_CANAL_UNION_CTRL');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_PER_EMPL_CANAL_UNION_CTRL');
  END;*/

  /*BEGIN
    DBMS_MVIEW.REFRESH('TVC_OPERACIONES_STK_COSTOS');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('TVC_OPERACIONES_STK_COSTOS');
  END;*/

 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_CUBO_ORDENESDECARGA_V');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CUBO_ORDENESDECARGA_V');
  END;

 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_VENTAS_STKL018_COBERTURA');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_VENTAS_STKL018_COBERTURA');
  END;


 -- ESPERAR;

  BEGIN
    --APERALTA 13/5/2020
    PK_RENTAB_CAMION.INICIAR(IN_EMPRESA => 2,
                             IN_ANHO    => TO_NUMBER(TO_CHAR(SYSDATE, 'yyyy')),
                             IN_MES     => NULL,
                             IN_CAMION  => NULL);
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('PK_RENTAB_CAMION.INICIAR');
  END;

  /****************************************************************************/
  --ESPERAR;

 /* BEGIN
    --ELIZABETH 05/01/2021
    DBMS_MVIEW.REFRESH('VM_CUBO_GASTOS_CAMION_DET');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CUBO_GASTOS_CAMION_DET');
  END;

  ESPERAR;
*/



  /****************************************************************************/

--  ESPERAR;
  -- refrescamiento d VM del Tablero JSA Logistica JB
  BEGIN

    DBMS_MVIEW.REFRESH('VM_STKC019_CARGA_BASCULA');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_STKC019_CARGA_BASCULA');
  END;

 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_STKC019_ORDEN_CARGA');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_STKC019_ORDEN_CARGA');
  END;

 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_STKC019_CUBO_NC');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_STKC019_CUBO_NC');
  END;

 -- ESPERAR;

  BEGIN

    DBMS_MVIEW.REFRESH('VM_STKC019_RESU_ORDEN_CARGA');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_STKC019_RESU_ORDEN_CARGA');
  END;

 -- ESPERAR;

  BEGIN

    DBMS_MVIEW.REFRESH('VM_STKC019_COMIS_VENTA_DETA');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_STKC019_COMIS_VENTA_DETA');
  END;

-- ESPERAR

-- REFRESCAMIENTO PARA TUBERIA DE COBRANZAS
  BEGIN
    DBMS_MVIEW.REFRESH('VM_CUBO_MOROSIDAD_X_CLI_BETA');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CUBO_MOROSIDAD_X_CLI_BETA') ;
  END;
  
--ESPERAR

  BEGIN
    DBMS_MVIEW.REFRESH('VM_CUBO_PRESTAMOS_EMI_V_BETA');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CUBO_PRESTAMOS_EMI_V_BETA') ;
  END;
 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_CUBO_MOROSIDAD_POR_CLIENTEN');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CUBO_MOROSIDAD_POR_CLIENTEN');
  END;

 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_CUBO_PRESTAMOS_EMITIDOS_V');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CUBO_PRESTAMOS_EMITIDOS_V');
  END;

 -- ESPERAR;

  BEGIN
    DBMS_MVIEW.REFRESH('VM_CUBO_CHEQUES_RECHAZADOS');
  EXCEPTION
    WHEN OTHERS THEN
    PP_ERROR('VM_CUBO_CHEQUES_RECHAZADOS');
  END;
  
 -- ESPERAR;
  -- refrescamiento de VM de Consulta Compra Gastos 8-3-5
  BEGIN
    DBMS_MVIEW.REFRESH('VM_OLAP_CNTRL_PRESUP_X_SUCU');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_OLAP_CNTRL_PRESUP_X_SUCU') ;
  END;
--ESPERAR;
  BEGIN
    DBMS_MVIEW.REFRESH('VM_CUBO_MOV_GASTOS_XCANAL_GRAL');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_CUBO_MOV_GASTOS_XCANAL_GRAL');
      END ;
-- ESPERAR;
      BEGIN
        DBMS_MVIEW.REFRESH('VM_CUBO_EERR_LINEA_NEGOCIO');
      EXCEPTION
        WHEN OTHERS THEN
          PP_ERROR('VM_CUBO_EERR_LINEA_NEGOCIO');
      END;
 --ESPERAR;

  BEGIN
    FACC015.PP_CARGAR_TABLA_AUX_CAST;
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('FACC015.PP_CARGAR_TABLA_AUX_CAST');
  END;

 BEGIN
    DBMS_MVIEW.REFRESH('VM_NO_FACTURADO_CAST');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_NO_FACTURADO_CAST');
  END;
 --==========
 
 BEGIN
    DBMS_MVIEW.REFRESH('VM_COBERTURA_IPP_GRUP');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_COBERTURA_IPP_GRUP');
 END;
 
 BEGIN
    DBMS_MVIEW.REFRESH('VM_COBERTURA_IPP_ART');
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('VM_COBERTURA_IPP_ART');
 END;
 
/*****************************************************/ 
 BEGIN
    STKL154.PP_BORRAR_COMIS_VEND_DET ; 
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('PP_BORRAR_COMIS_VEND_DET');
 END;
 
/***************************************************/ 
  BEGIN
    STKL154.PP_INSERT_COMIS_VEND_DETA_TEMP; 
  EXCEPTION
    WHEN OTHERS THEN
      PP_ERROR('PP_INSERT_COMIS_VEND_DETA_TEMP');
 END;
 
 
 
  IF V_MENSAJE IS NOT NULL THEN
      V_CORREO := '<html><head><style>
                table {
                  font-family: arial, sans-serif;
                  border-collapse: collapse;
                  width: 100%;
                }
                td, th {
                  border: 1px solid #dddddd;
                  text-align: left;
                  padding: 8px;
                  }</style></head>
                  <body>
           <h2>Error procedimiento GEN_REFRESH_VISTAS_NOCHE </h2>
           <table>
           <tr>
      <th>Error</th>
      </tr>' || V_MENSAJE || '
      </table></body></html>';

      -- CALL THE PROCEDURE

      SEND_EMAIL(P_SENDER     => 'noreply',
                 P_RECIPIENTS => V_RECIPIENTS,
                 P_CC         => V_CC,
                 P_BCC        => '',
                 P_SUBJECT    => 'Error GEN_REFRESH_VISTAS_NOCHE',
                 P_MESSAGE    => V_CORREO,
                 P_MIME_TYPE  => 'text/html');
                 
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      SEND_EMAIL(P_SENDER     => 'noreply',
                 P_RECIPIENTS => V_RECIPIENTS,
                 P_CC         => V_CC,
                 P_BCC        => '',
                 P_SUBJECT    => 'Error GEN_REFRESH_VISTAS_NOCHE',
                 P_MESSAGE    => 'Error al enviar correo ' || sqlerrm,
                 P_MIME_TYPE  => 'text/html');


END;
/
